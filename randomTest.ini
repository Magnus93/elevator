
SIGNAL void randomTest() {
  int i, seed, random, call, pos, MAX_INT, lastPulsePinValue;
  int reached1, reached2, reached3;
  int at_floor, door_to_open;
  float time_step;
  time_step = 0.0025;
  MAX_INT = 32767;
  seed = -5;
  pos = 0;
  

  //CLOSE DOORS
  PORTC |= 1 << 8;

  printf("Test Started! \n");
  while (1)
  {
    random = rand(seed);
    call = random % 5;
    //printf("call is : %d", call);
    if (lastPulsePinValue < (PORTC & (1 << 9))) {
      if (TIM3_CCR1) pos += 1;
      if (TIM3_CCR2) pos -= 1;
    }
    //printf("pos : %d \n",pos);
    lastPulsePinValue = PORTC & (1 << 9);
    if ((PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2)
    {
      if (pos >= -1 && pos <= 1 && reached1 != 1)
      {
        // reached floor 1
        printf("arrived at floor 1 \n");
        at_floor = 1;
        reached1 = 1;
      }else if (pos >= 399 && pos <= 401 && reached2 != 1)
      {
        // reached floor 2
        printf("arrived at floor 2 \n");
        at_floor = 1;
        reached2 = 1;
      } else if (pos >= 799 && pos <= 801 && reached3 != 1)
      {
        // reached floor 3
        printf("arrived at floor 3 \n");
        at_floor = 1;
        reached3 = 1;
      }
      if(door_to_open)
      {
        printf("Opening Door \n");
        PORTC ^= 1 << 8;
        door_to_open = 0;

        for (i = 0; i < 400; ++i)
        {
          if (lastPulsePinValue < (PORTC & (1 << 9))) {
            if (TIM3_CCR1) pos += 1;
            if (TIM3_CCR2) pos -= 1;
          } 
          lastPulsePinValue = PORTC & (1 << 9); 
          swatch(time_step);
        }

        PORTC ^= 1 << 8;
        at_floor = 0;
      }
    }
    if (random < (MAX_INT / 100))
    { printf("SWITCHING \n");
      switch (call)
      {
        case (0):
          printf("Call to Floor 1 \n");
          reached1 = 0; 
          break;
        case (1):
          printf("Call to Floor 2 \n");
          reached2 = 0; 
          break;
        case (2):
          printf("Call to Floor 3 \n");
          reached3 = 0; 
          break;
        case (3):
          printf("Call to Stop \n");
          break;
        case(4):
          printf("Call to Open Door at next floor \n");
          door_to_open = 1;
          at_floor = 0;
        default: break;  
      }
      
      if (0 <= call && call <= 3)
      {
        PORTC |= 1 << call;
      }
    }
    // wait 1s
    for (i = 0; i < 400; ++i)
    {
      if (lastPulsePinValue < (PORTC & (1 << 9))) {
        if (TIM3_CCR1) pos += 1;
        if (TIM3_CCR2) pos -= 1;
      } 
      lastPulsePinValue = PORTC & (1 << 9);
      swatch(time_step);
    }
  seed = seed + 1;
  //printf("random : %d, seed: %d ", random, seed);
  PORTC &= ~(1 << call);
  }
  
}